# 🧠 Medium Complexity Org Reclassification – Documentation Hub

**Author**: Yash Shah  
**Project**: PDLM GitHub Migration Optimization  
**Last Updated**: July 7, 2025  
**Purpose**: Expand automation eligibility by defining a middle ground between KPMG’s conservative “Complex” classification and fully Simple orgs. This document defines logic, justification, and test notes for all relevant filters.

---

## 📌 Summary

This document captures the full reclassification logic for identifying **Medium Complexity** orgs—an expansion tier meant to reduce unnecessary manual migration while still avoiding high-risk automations.

---

## 🔍 Classification Comparison

### 📊 Table 1: KPMG "Complex" Classification Filters

| Filter Name            | Constraint / Trigger              | Notes                            |
|------------------------|-----------------------------------|----------------------------------|
| Size (KB)              | >= 102400 KB (~100MB)             | Raw `.git` + file size           |
| Branch Count           | >= 50                             |                                  |
| Commit Count           | >= 400                            |                                  |
| Has Webhooks           | true                              |                                  |
| Has Runners            | true                              |                                  |
| Has Actions            | true                              |                                  |
| Has Branch Protections | true                              |                                  |
| Has Issues             | true                              |                                  |
| Has Pages              | true                              | No differentiation made          |
| Has Releases           | true                              |                                  |
| Has Wiki               | true                              |                                  |
| Has Binary Files       | true                              |                                  |
| Has Pull Requests      | true                              |                                  |

---

### 📊 Table 2: Medium (Simple 2.0) Classification Filters

| Filter Name            | Updated Constraint / Allowance           | Notes                                  |
|------------------------|------------------------------------------|----------------------------------------|
| Size (Bytes)           | < 21474836480 (~20GB)                    | Large increase allowed for testability |
| Branch Count           | TBD – Currently mirrors KPMG             | Potential for adjustment                |
| Commit Count           | TBD – Currently mirrors KPMG             | Test-based tuning in progress           |
| Has Webhooks           | Must be false or not present             | Strict block                            |
| Has Runners            | false                                    | Strict block                            |
| Has Actions            | false                                    | Strict block                            |
| Has Branch Protections | false                                    | Strict block                            |
| Has Issues             | false                                    | Strict block                            |
| Has Pages              | Only static pages allowed                | Dynamic = still complex                 |
| Has Releases           | false                                    | Strict block                            |
| Has Wiki               | false                                    | Strict block                            |
| Has Binary Files       | false                                    | Strict block                            |
| Has Pull Requests      | false                                    | Strict block                            |

---

## 🧩 Filter Deep Dive

### 🔸 1. Size

**KPMG:**  
- ≥ 100MB → Complex

**Simple 2.0:**  
- < 20GB (21474836480 bytes)

**Rationale:**  
- GitHub handles larger repos effectively now  
- Size alone does not equal complexity; needs correlation with activity and file type

**Next Steps:**  
- Test on repo sizes: 5GB, 10GB, 15GB+  
- Track migration time vs failures

---

### 🔸 2. Branch Count

**KPMG:**  
- ≥ 50 branches → Complex

**Simple 2.0:**  
- Currently mirrors KPMG

**Discussion:**  
- Potential for relaxing to 75 or 100 after stress testing

**Next Steps:**  
- Run test migrations on branch-heavy repos  
- Measure migration performance

---

### 🔸 3. Commit Count

**KPMG:**  
- ≥ 400 commits → Complex

**Simple 2.0:**  
- Currently mirrors KPMG

**Discussion:**  
- 400 is conservative  
- Commit count alone might not indicate risk  
- Can potentially push to 750 or 1000

**Next Steps:**  
- Test higher-commit repos  
- Use shallow clones and history optimization

---

### 🔸 4. Has Webhooks

- **KPMG:** true = Complex  
- **Simple 2.0:** Must be false or not exist

**Reason:**  
- Webhooks trigger external systems, making migrations risky

---

### 🔸 5. Has Actions

- Blocked  
- Tied to pipelines and CI/CD  
- Repos with Actions may break if migrated improperly

---

### 🔸 6. Has Runners

- Blocked  
- Custom GitHub runners introduce infra dependencies  
- Needs human validation

---

### 🔸 7. Has Branch Protections

- Blocked  
- Potential migration blockers for protected main branches

---

### 🔸 8. Has Issues

- Blocked  
- Not required for most automation use cases  
- Could be reconsidered in future phases

---

### 🔸 9. Has Pages

**KPMG:**  
- Any pages = Complex

**Simple 2.0:**  
- Only static pages allowed  
- Dynamic = Still blocked

**Detection Method (In Progress):**  
- Static: HTML only, no SPA logic  
- Dynamic: React, Vue, client-side routing

**Next Steps:**  
- Build static/dynamic scanner  
- Label pages for manual override if needed

---

### 🔸 10. Has Releases

- Blocked  
- Release metadata often ties to deployment automation

---

### 🔸 11. Has Wiki

- Blocked  
- Low usage, but unreliable to migrate cleanly

---

### 🔸 12. Has Binary Files

- Blocked  
- Repos with videos, zips, etc. lead to `.git` bloat  
- LFS support might be considered in future

---

### 🔸 13. Has Pull Requests

- Blocked  
- PRs tied to forks, protected branches, and reviewers  
- High risk of mismatch or broken links post-migration

---

## 🧪 Test Matrix (Planned)

| Filter         | Test Range     | Notes                         |
|----------------|----------------|-------------------------------|
| Commit Count   | 400 → 1000+    | Looking for migration ceiling |
| Branch Count   | 50 → 100       | Risk threshold TBD            |
| Size           | 5GB → 20GB     | Timing + failure analysis     |
| Pages (Static) | HTML only      | Scanner accuracy validation   |
| Pages (Dynamic)| React/Vue/etc. | Evaluate exclusion reliability|

---

## 📁 Appendix: MongoDB Filter (Example)

```json
{
  "complexity_score": "Complex",
  "raw_size_bytes": { "$lt": 21474836480 },
  "has_pages": true,
  "$or": [
    { "has_webhooks": { "$exists": false } },
    { "has_webhooks": false }
  ],
  "has_issues": false,
  "has_actions": false,
  "has_runners": false,
  "has_branch_protections": false,
  "has_releases": false,
  "has_wiki": false,
  "has_binary_files": false,
  "has_pull_requests": false
}
